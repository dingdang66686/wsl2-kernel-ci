name: Build WSL2 Dev Release Kernel

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: "false"
  repository_dispatch:
  schedule:
   - cron: "0 0 1 * *" # min hour day week year

concurrency: builder-${{ github.event_name }}-${{ github.sha }}

env:
  BUILD_THREAD: 3

jobs:
          
  build:
    #### Build Matrix
    # strategy:
    #   matrix:
    #     builder: [ghcr.io/nyamisty/altserver_builder_alpine_armv7, ghcr.io/nyamisty/altserver_builder_alpine_aarch64, ghcr.io/nyamisty/altserver_builder_alpine_amd64, ghcr.io/nyamisty/altserver_builder_alpine_i386]
    runs-on: ubuntu-24.04
    steps:
      ##########################################################
      ###
      ### XXX: Pre-init steps here
      ###
      ##########################################################
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      
      ### XXX: Keep alive cron-type workflows
      - uses: gautamkrishnar/keepalive-workflow@master

      ##########################################################
      ###
      ### XXX: Env-setup steps here
      ###
      ##########################################################

      - name: Prepare WSL2 Build Environment
        run: |
          #sudo sed -i "/deb-src/s/# //g" /etc/apt/sources.list
          # For deb822
          sudo sed -i '/^Types:/ s/\bdeb\b/deb deb-src/g' /etc/apt/sources.list.d/ubuntu.sources
          sudo apt update
          sudo apt build-dep linux -y;
          sudo apt install libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf llvm -y

      - name: Download WSL2 Kernel Source
        run: |
          apt source linux -y
          ls *.|cut -f1 -d/
          mv linux*/ kernelsource
        
        
      - name: Preprocess Kernel Sources
        run: |
          cd kernelsource  
          chmod a+x debian/rules
          chmod a+x debian/scripts/*
          chmod a+x debian/scripts/misc/*
          perl -i -pe 's/(\d+\.\d+\.\d+-\d+\.\d+)/$1+wsl/ if $. == 1' debian.master/changelog
      
      - name: Process Kernel Config
        run: |
          cd kernelsource
          debian/scripts/misc/annotations --arch amd64 --update ../config_wsl
          fakeroot debian/rules clean
      
      # - name: Patch WSL2 Kernel Config
      #   working-directory: build_workdir
      #   run: |
      #     cd ${{ env.KERNEL_DIR }}
      #     cp .config .config_original
      #     python3 ${{ github.workspace }}/config_merge/merge_config.py .config_original ${{ github.workspace }}/config_merge/ubuntu_config ${{ github.workspace }}/config_merge/ubuntu_config_picked.diff .config
      #     yes "" | (make oldconfig && make prepare)

      ##########################################################
      ###
      ### XXX: Pre-build steps here (checking, debugging)
      ###
      ##########################################################
        
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ always() && ( (github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled) || failure() ) }}
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        timeout-minutes: ${{ github.event_name == 'schedule' && 40 || 360 }}
      
      ##########################################################
      ###
      ### XXX: Main building steps here
      ###
      ##########################################################
            
      - name: Compile Kernel Debs
        run: |
          cd kernelsource
          fakeroot debian/rules binary-headers binary-generic binary-perarch
      
      - name: Get Release Name
        run: |
          NAME="$(ls *image*| cut -d_ -f1 | sed s/-image-unsigned//)"
          VERSION="$(echo $NAME|cut -f2 -d-)"
          echo "NAME=$NAME" >> $GITHUB_ENV
      
      - name: Arrange Artifacts
        run: |
          mv kernelsource/debian/arch/x86/boot/bzImage bzImage
          mkdir -p /tmp/build_output
          mv *.deb /tmp/build_output

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ always() && ( (github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled) || failure() ) }}
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        timeout-minutes: ${{ github.event_name == 'schedule' && 40 || 360 }}
      
      ##########################################################
      ###
      ### XXX: Artifact Upload
      ###
      ##########################################################
      
      # XXX: Select one debug artifact uploading
      # Upload action artifact as-is
      - name: Upload to GitHub Actions artifact
        uses: NyaMisty/upload-artifact-as-is@master
        with:
          path: /tmp/build_output/*

      - name: Create New Release and Upload
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/build_output/*"
          name: "${{ env.NAME }}"
          tag: ${{ env.VERSION }}
          commit: ${{ github.sha }}
          #prerelease: true
          allowUpdates: true

          # XXX: edit this to false & true if you want to preserve original artifact
          removeArtifacts: true
          replacesArtifacts: false
          artifactErrorsFailBuild: true
          token: ${{ secrets.GIT_HUB_TOKEN }}